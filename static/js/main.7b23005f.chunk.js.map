{"version":3,"sources":["components/UpArrow/index.js","components/DownArrow/index.js","components/FilterForm/index.js","components/Card/index.js","utils/API.js","utils/APPID.js","components/FilterData/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","serviceWorker.js","index.js"],"names":["UpArrow","width","height","viewBox","class","fill","xmlns","d","DownArrow","FilterForm","props","className","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFirstSort","ascend","sortFirstA","desc","sortFirstD","handleLastSort","arrowL","sortLastA","sortLastD","Card","alt","results","firstName","src","picture","lastName","email","axios","get","headers","FilterData","state","filter","getDummy","setState","Data","getEmp","API","then","res","data","catch","err","console","log","event","preventDefault","sorted","sort","a","b","target","this","lowerFilter","toLowerCase","emps","includes","map","key","Component","Wrapper","children","Title","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7b23005f.chunk.js","sourcesContent":["import React from \"react\";\n\n// returns the up arrow for sorting buttons\nfunction UpArrow() {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 16 16\"\n      class=\"bi bi-caret-up-fill\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\" />\n    </svg>\n  );\n}\n\nexport default UpArrow;\n","import React from \"react\";\n\n// returns the down arrow for sorting buttons\nfunction DownArrow() {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 16 16\"\n      class=\"bi bi-caret-down-fill\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\n    </svg>\n  );\n}\n\nexport default DownArrow;\n","import React from \"react\";\nimport UpArrow from \"../UpArrow\";\nimport DownArrow from \"../DownArrow\";\n\nfunction FilterForm(props) {\n  // shows arrows on button when sorting using first name\n  function arrowF(ascend, desc) {\n    if (ascend) {\n      return <UpArrow />;\n    } else if (desc) {\n      return <DownArrow />;\n    } else {\n      return \"\";\n    }\n  }\n    // shows arrows on button when sorting using last name\n  function arrowL(ascend, desc) {\n    if (ascend) {\n      return <UpArrow />;\n    } else if (desc) {\n      return <DownArrow />;\n    } else {\n      return \"\";\n    }\n  }\n  \n  // returns the user filter form and sorting buttons\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"filter\">Filter employees by first or last name:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"filter\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Filter Employees\"\n          id=\"filter\"\n        />\n        <div className=\"d-flex justify-content-center\">\n          <button\n            onClick={props.handleFirstSort}\n            className=\"btn btn-primary mt-3 mx-1\"\n          >\n            Sort First Name {arrowF(props.sortFirstA, props.sortFirstD)}\n          </button>\n          <button\n            onClick={props.handleLastSort}\n            className=\"btn btn-primary mt-3 mx-1\"\n          >\n            Sort Last Name {arrowL(props.sortLastA, props.sortLastD)}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default FilterForm;\n","import React from \"react\";\nimport \"./style.css\";\n\n// returns the a card for each user with their information filled in\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.results.firstName} src={props.results.picture} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.results.firstName}{\" \"}\n            {props.results.lastName}\n          </li>\n          <li>\n            <strong>Email:</strong> {props.results.email}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","// import React from \"react\";\nimport axios from \"axios\";\nimport APP_ID from \"./APPID\";\n\nconst BASE_URL = \"https://dummyapi.io/data/api\";\n\n// the API call to retrieve the employee data\nexport default {\n  search: function () {\n    return axios.get(`${BASE_URL}/user`, { headers: { \"app-id\": APP_ID } });\n  }\n};\n","const APP_ID = \"5f7cab695507d350399ad26d\";\r\nexport default APP_ID;\r\n","import React, { Component } from \"react\";\nimport FilterForm from \"../FilterForm\";\nimport Card from \"../Card\";\nimport API from \"../../utils/API\";\nimport Data from \"./dummyData.json\";\n\nclass FilterData extends Component {\n  state = {\n    filter: \"\",\n    results: [],\n    sortFirstA: false,\n    sortFirstD: false,\n    sortLastA: false,\n    sortLastD: false\n  };\n\n  // When this component mounts, employee data is retrieved\n  // API is used when api key can be hiddne and dummy data is used otherwise\n  componentDidMount() {\n    this.getDummy();\n  }\n  // pulls dummy data for employees using example json\n  getDummy = () => {\n    this.setState({ results: Data });\n  };\n  // pulls dummy data for employees using API\n  getEmp = () => {\n    API.search()\n      .then(res => {\n        this.setState({ results: res.data.data });\n      })\n      .catch(err => console.log(err));\n  };\n  // handles sorting by first name\n  handleFirstSort = event => {\n    event.preventDefault();\n    const sorted = this.state.results;\n    if (this.state.sortFirstA === false) {\n      sorted.sort((a, b) => (a.firstName > b.firstName ? 1 : -1));\n      this.setState({\n        results: sorted,\n        sortFirstA: true,\n        sortFirstD: false,\n        sortLastA: false,\n        sortLastD: false\n      });\n    } else if (this.state.sortFirstD === false) {\n      sorted.sort((a, b) => (a.firstName > b.firstName ? -1 : 1));\n      this.setState({\n        results: sorted,\n        sortFirstA: false,\n        sortFirstD: true,\n        sortLastA: false,\n        sortLastD: false\n      });\n    }\n  };\n  // handles sorting by last name\n  handleLastSort = event => {\n    event.preventDefault();\n    const sorted = this.state.results;\n    if (this.state.sortLastA === false) {\n      sorted.sort((a, b) => (a.lastName > b.lastName ? 1 : -1));\n      this.setState({\n        results: sorted,\n        sortFirstA: false,\n        sortFirstD: false,\n        sortLastA: true,\n        sortLastD: false\n      });\n    } else if (this.state.sortLastD === false) {\n      sorted.sort((a, b) => (a.lastName > b.lastName ? -1 : 1));\n      this.setState({\n        results: sorted,\n        sortFirstA: false,\n        sortFirstD: false,\n        sortLastA: false,\n        sortLastD: true\n      });\n    }\n  };\n  // handles imput changes\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n  // renders the form and each card\n  render() {\n    const lowerFilter = this.state.filter.toLowerCase();\n    // filters array as the user types\n    const emps = this.state.results.filter(data => {\n      return (\n        this.state.filter === \"\" ||\n        data.firstName.toLowerCase().includes(lowerFilter) ||\n        data.lastName.toLowerCase().includes(lowerFilter)\n      );\n    });\n    return (\n      <div>\n        <FilterForm\n          filter={this.state.filter}\n          handleInputChange={this.handleInputChange}\n          handleFirstSort={this.handleFirstSort}\n          handleLastSort={this.handleLastSort}\n          sortFirstA={this.state.sortFirstA}\n          sortFirstD={this.state.sortFirstD}\n          sortLastA={this.state.sortLastA}\n          sortLastD={this.state.sortLastD}\n        />\n        <div className=\"row d-flex justify-content-around\">\n          {emps.map(results => (\n            <Card results={results} key={results.id} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FilterData;\n","import React from \"react\";\nimport \"./style.css\";\n\n// a wrapper for the app HTML content\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n// returns the title of the page\nfunction Title(props) {\n  return <h1 className=\"title\">Employee Directory{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport FilterData from \"./components/FilterData\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title></Title>\n        <FilterData></FilterData>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}